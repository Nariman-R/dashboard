import streamlit as st
import pandas as pd
import requests
from bs4 import BeautifulSoup
import json
import re

st.set_page_config(page_title="Duolingo –†–µ–π—Ç–∏–Ω–≥", layout="centered")
st.title("üèÜ Duolingo –†–µ–π—Ç–∏–Ω–≥ –ö–æ–ª–ª–µ–≥ (–ø–∞—Ä—Å–∏–Ω–≥ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π)")

# –ó–∞–≥—Ä—É–∑–∫–∞ usernames –∏–∑ users.txt
try:
    with open("users.txt", "r") as f:
        usernames = [line.strip() for line in f if line.strip()]
    if not usernames:
        st.error("–§–∞–π–ª users.txt –ø—É—Å—Ç–æ–π.")
        st.stop()
except Exception as e:
    st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ users.txt: {e}")
    st.stop()

results = []
st.subheader("üîç –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–æ—Ñ–∏–ª–µ–π...")
progress = st.progress(0)
step = 1 / len(usernames)

def extract_json_from_html(html_text):
    # –ò—â–µ–º JSON –≤–Ω—É—Ç—Ä–∏ —Ç–µ–≥–∞ <script id="__NEXT_DATA__">
    soup = BeautifulSoup(html_text, "html.parser")
    script_tag = soup.find("script", {"id": "__NEXT_DATA__"})
    if script_tag:
        try:
            return json.loads(script_tag.string)
        except Exception:
            return None
    return None

for i, username in enumerate(usernames):
    url = f"https://www.duolingo.com/profile/{username}"
    headers = {"User-Agent": "Mozilla/5.0"}

    try:
        res = requests.get(url, headers=headers, timeout=10)
        if res.status_code != 200:
            st.warning(f"‚ö†Ô∏è {username}: HTTP {res.status_code}")
            continue

        json_data = extract_json_from_html(res.text)
        if not json_data:
            st.warning(f"‚ö†Ô∏è {username}: –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å JSON")
            continue

        # –ü—É—Ç—å –∫ XP –∏ —Å—Ç—Ä–∏–∫—É –≤–Ω—É—Ç—Ä–∏ JSON
        user_data = json_data["props"]["pageProps"]["userData"]

        total_xp = user_data.get("totalXp", 0)
        streak = user_data.get("streak", 0)

        results.append({
            "username": username,
            "totalXp": total_xp,
            "streak": streak
        })
        st.success(f"‚úÖ {username}: {total_xp} XP, üî• {streak} –¥–Ω–µ–π")
    except Exception as e:
        st.warning(f"‚ùå {username}: –æ—à–∏–±–∫–∞ {e}")

    progress.progress((i + 1) * step)

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞
if results:
    df = pd.DataFrame(results)
    df = df.sort_values("totalXp", ascending=False)

    st.subheader("üìã –†–µ–π—Ç–∏–Ω–≥ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
    st.dataframe(df, use_container_width=True)

    st.subheader("üìä –û—á–∫–∏ (XP)")
    st.bar_chart(df.set_index("username")["totalXp"])

    st.subheader("üî• –°—Ç—Ä–∏–∫ (–¥–Ω–∏ –ø–æ–¥—Ä—è–¥)")
    st.bar_chart(df.set_index("username")["streak"])
else:
    st.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∏ –ø–æ –æ–¥–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
