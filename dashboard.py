import streamlit as st
import pandas as pd
import requests
from bs4 import BeautifulSoup
import time

st.set_page_config(page_title="Duolingo –†–µ–π—Ç–∏–Ω–≥", layout="centered")
st.title("üèÜ Duolingo –†–µ–π—Ç–∏–Ω–≥ –ö–æ–ª–ª–µ–≥ (—á–µ—Ä–µ–∑ –ø–∞—Ä—Å–∏–Ω–≥ –ø—Ä–æ—Ñ–∏–ª—è)")

# –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
try:
    with open("users.txt") as f:
        users = [line.strip() for line in f if line.strip()]
except Exception as e:
    st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ users.txt: {e}")
    users = []

# –§—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø—Ä–æ—Ñ–∏–ª—è
def get_duolingo_profile_data(username):
    url = f"https://www.duolingo.com/profile/{username}"
    headers = {
        "User-Agent": "Mozilla/5.0"
    }

    try:
        r = requests.get(url, headers=headers, timeout=10)
        if r.status_code != 200:
            return {"username": username, "error": f"HTTP {r.status_code}"}

        soup = BeautifulSoup(r.text, "html.parser")

        # –ù–∞–π—Ç–∏ XP
        xp = 0
        xp_block = soup.find("div", string=lambda s: s and "XP" in s)
        if xp_block:
            xp_text = xp_block.text.strip().replace(",", "")
            xp = int(xp_text.replace("XP", "").strip())

        # –ù–∞–π—Ç–∏ streak
        streak = 0
        streak_block = soup.find("div", string=lambda s: s and "day streak" in s.lower())
        if not streak_block:
            streak_block = soup.find("div", string=lambda s: s and "üî•" in s)
        if streak_block:
            digits = ''.join(filter(str.isdigit, streak_block.text))
            streak = int(digits)

        return {
            "username": username,
            "totalXp": xp,
            "streak": streak
        }
    except Exception as e:
        return {"username": username, "error": str(e)}

# –û—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫
if not users:
    st.warning("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç. –î–æ–±–∞–≤—å—Ç–µ –ª–æ–≥–∏–Ω—ã –≤ users.txt.")
else:
    results = []
    st.subheader("üîç –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–æ—Ñ–∏–ª–µ–π...")
    progress = st.progress(0)
    step = 1 / len(users)

    for i, user in enumerate(users):
        data = get_duolingo_profile_data(user)
        if "error" in data:
            st.warning(f"‚ö†Ô∏è {user}: {data['error']}")
        else:
            st.success(f"‚úÖ {user}: {data['totalXp']} XP, üî• {data['streak']} –¥–Ω–µ–π")
            results.append(data)
        progress.progress((i + 1) * step)
        time.sleep(0.5)  # –∞–Ω—Ç–∏-—Ñ–ª—É–¥ –∑–∞—â–∏—Ç–∞

    df = pd.DataFrame(results)

    if not df.empty:
        df = df.sort_values("totalXp", ascending=False)

        st.subheader("üìã –†–µ–π—Ç–∏–Ω–≥ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
        st.dataframe(df, use_container_width=True)

        st.subheader("üìä –û—á–∫–∏ (XP)")
        st.bar_chart(df.set_index("username")["totalXp"])

        st.subheader("üî• –°—Ç—Ä–∏–∫ (–¥–Ω–∏ –ø–æ–¥—Ä—è–¥)")
        st.bar_chart(df.set_index("username")["streak"])

        st.caption("–î–∞–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω—ã –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –ø–∞—Ä—Å–∏–Ω–≥ –ø—É–±–ª–∏—á–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π.")
    else:
        st.warning("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ. –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ—Ñ–∏–ª–∏ —Å–∫—Ä—ã—Ç—ã –∏–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–∞–π—Ç–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å.")
